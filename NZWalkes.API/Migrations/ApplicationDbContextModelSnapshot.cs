// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalkes.API.data;

#nullable disable

namespace NZWalkes.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalkes.API.Models.RegionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c39e209-b65f-43b7-b636-48827a3e8f47"),
                            Code = "Test Code1",
                            Name = "Test Name 1 ",
                            RegionImageUrl = "Test Image Url1 "
                        },
                        new
                        {
                            Id = new Guid("f8843075-1b5c-4495-80ba-a470a343e0b2"),
                            Code = "Test Code2",
                            Name = "Test Name 2 ",
                            RegionImageUrl = "Test Image Url2 "
                        },
                        new
                        {
                            Id = new Guid("eeadef98-d91c-4f6f-8834-2e8b03749543"),
                            Code = "Test Code 3",
                            Name = "Test Name 3 ",
                            RegionImageUrl = "Test Image Url3 "
                        },
                        new
                        {
                            Id = new Guid("a8076ec9-02f5-4226-bc54-f53704a49be9"),
                            Code = "Test Code4",
                            Name = "Test Name 4 ",
                            RegionImageUrl = "Test Image Url4 "
                        });
                });

            modelBuilder.Entity("NZWalkes.API.Models.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("NZWalkes.API.Models.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WalkDifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("WalkDifficultyId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalkes.API.Models.WalkDifficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WalkDifficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("436a1bd0-e8c6-48e6-b55d-6ea25f51100c"),
                            Code = "Easy"
                        },
                        new
                        {
                            Id = new Guid("a06a0de4-c8bd-412e-9176-46fd314d333a"),
                            Code = "Hard"
                        },
                        new
                        {
                            Id = new Guid("90c72a00-8d60-4d14-afaf-63fcc2716ce1"),
                            Code = "Medieum"
                        });
                });

            modelBuilder.Entity("NZWalkes.API.Models.Walk", b =>
                {
                    b.HasOne("NZWalkes.API.Models.RegionModel", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalkes.API.Models.WalkDifficulty", "WalkDifficulty")
                        .WithMany()
                        .HasForeignKey("WalkDifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("WalkDifficulty");
                });
#pragma warning restore 612, 618
        }
    }
}
